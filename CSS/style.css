* {
  box-sizing: border-box;
} 

body {
  line-height: 1.5em;
  background: #C6D0D2;
}

/* label, button {
  font-family: 'Josefin Sans', sans-serif;
} */

h1 {
  margin: 0;
}

#header {
  text-align: center;
  /* border-bottom: 3px solid black;  */
  margin-bottom: 5px;
}


.head {
  background: #0A2239;
  margin: 0 auto;
  padding: 20px;
  text-align: center;
  color: white;
}

.newsletter {
  max-width: 525px;
  margin: 0 auto;
  padding: 0 20px;
}

hr {
  border: 2px solid black;
}

/* #header:not([class="head"]) {} */

.container {
  max-width: 525px; 
  margin: 0 auto;
  padding: 1rem;
  /* border-top: 1px black solid; */
  width: 100%;
  background: white;
  border-radius: 15px;
}

/*
 I have not targeted the <form> yet. Checking a previous lesson they targetd the <form> and controlled its with. I've been attacking everyting else but the <form> which is probably why I am having some items are not lining up correctly. Below I will try messing around with the <form>. 
*/ 

legend, 
.pt-1 p, 
.pt-2 p,
button {
  font-family: 'Ubuntu', sans-serif;
}

form {
  max-width: 450px;
  margin: 0 auto;
  /* ~TEST~ I probably didn't need to write this since earlier i've already set a max-width in the ".container". I'll see if messing around with this number affects things. ~TEST~ */
}


.inside {
  border-top: 2px solid black;
  width: 100%;
  padding-top: 20px;
}

.pt-1, .pt-2 {
  /* ~TEST~ The margin portion probably does not need to be here because the way its written was for me to center the form. I think this is probably arleady done due to the .container values. Test and see. ~TEST~ */
  border: 0;
  margin: 0 auto;
  /* border-bottom: 1px black solid; */
  padding: 0 0 15px 0;
}



.pt-1 {
  border-bottom: 1px black solid;
}

.pt-1 input, .pt-1 select {
  /* I must be careful. When using ID's they are so strong that even though I write something further down the ID will still override  it. In this case i had prior "#pt-1 and i couldnt change my "user-zip" width to its initial size. Once i changed "pt-1" into a "class selector" then the came about. */
  display: block;
  margin: 5px 0 30px;
  background: #C4CED4;
  height: 50px;
  border: none;
  border-radius: 10px;
  width: 100%;
}

.pt-1 input:focus, textarea:focus {
  box-shadow: 0 0 0 2px white, 0 0 0 5px green;
  /* transition: ease-in-out, width 5s ease-in-out; */
  /* outline: 4px groove green; */
  outline: none;
}


/* ??? Im not sure why my transition isn't working within 5 seconds and why I dont see an easing in and or out. Probably could be because im messing with the box-shadow instead of a specific size. And why is only my zip code they only item that responds to this function ??? */



input[placeholder] {
  text-align: right;
  padding-right: 10px;
}

select[id="state"] {
  padding: 0 5px;
}

input[name="user-zip"] {
  width: initial;
}


/* #pt-1 label {
  padding-bottom: 20px;
} */

/* input, select {
  background: #C4CED4;
} */

/* input[type="text"], select[id="state"] {
  margin:5px 0 30px;
} */


/* #pt-2 label {
  display: block; 
}

#pt-2 .in {
  display: inline;
} */

/* ?? I dont know how to stack each radio/checkbox item on top of each other instead of having it side by side. This was fixed by breaking each section up with a <div> but how do i do it in CSS?
??? 
~ Answer ~ One way to do this is to wrap each pair into a <div>.
~ Answer ~
*/

/* input, label, textarea {
  display: block;
} */

.pt-2 legend {
  padding-top: 20px;
}

.pt-2 p {
  margin-bottom: 10px;
}

div[class="nl"] {
  margin-bottom: 10px;
}

textarea {
  height: 100px;
  width: 100%;
  max-width: 430px;
  padding: 0;
  margin-top: 10px;
  background-color: #C4CED4;
  border:none;
  /* text-align: center; */
  /* ??? I dont know how to get my <textarea> to have the same width as the button. ??? 
  ~ Answer ~ I think i fixed this due to the padding that was initially around <fieldset> or the <main>. The issue was that there was more padding around the <textarea> or something. As I made sure the whole body was uniform then the <textarea> and <button> aligned well. ALSO the power of the ID's were messing around with my ablility to make the adjustments, so the adjustment made to keep the <fieldset> uniform with the <button> was much easier to control. 
  ~ Answer ~
  */
  transition: all 3s;
}

textarea:focus {
  height: 150px;
}

button[type="submit"] {
  width: 100%;
  max-width: 430px;
  padding: 15px 0;
  /* text-align: center; */
  margin: 10px auto;
  /* margin: 5px 20px; */
  /* ??? I dont understand why giving the button a margin margin width value makes the screen scrollable from left to right? ???*/
  outline: none;
  border: none;
  border-radius: 10px;
  background-color: #78BC61;
}

footer {
  text-align: center;
}

@media (min-width: 768px) {
  .pt-1 .flex-pair {
    display: flex;
  }

  /* .pt-1 input, .pt-1 select {
     */
     /* ??? when wrote whats above the zip code portion took up the same width as the other input's. I tried to make the adjustment after but the flex-basis was not working at all??? */
    input[id="name"],
    input[id="email"],
    input[id="number"],
    input[id="address"],
    input[id="city"],
    .pt-1 select {  
    flex-grow: 1;
    flex-basis: 75%;
    /* The flex grow allows each flex-item to take up space equally (of the input and select) of the room that is available to it. The flex-basis works similar to width property at setting the lengths of an element but this is more for flex items. We want 75% of the width to be taken up. */
  }

  .flex-pair[id="zip"] {
    flex-grow: 1;
    flex-basis: 100%;
    /* ???? I dont understand because when i adjust the values here nothing changes at all. Why is this???? */
  }

  .pt-1 label {
    flex-basis: 25%;
    /* This takes up uniformly the remaining 25% space available. */
    height: 50px;
    /* This height is here to match the size of the input fields. */
    margin: auto 0;
    /* The margin here align's each item because since we zeroed out the left and right margins we left the browser to calculate the Top and bottom margin which would align the items perfectly.  */
  }
  
  /* label[for="name"],
  label[for="email"],
  label[for="number"],
  label[for="address"],
  label[for="city"],
  label[for="state"],
  label[for="zip"] {
    width: initial;
    max-width: 300px;
  } */

  /* .pt-1 input {
    width: 50%;
  } */
}
 